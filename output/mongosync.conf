# PS: bool type can only be "on" or "off"
# if some items needn't specified, comment it

#source db ip port string
src_srv = 127.0.0.1:17221
#source db user
src_user = mongo 
#source db passwd
src_passwd = password 
#source authtification db
src_auth_db = admin 
#whether source db uses MONGO_MCR password machenism, otherwise according to the db version
# src_use_mcr = on

#if src type is mongos, need shard's authorization.
is_mongos = off
shard_user = mongo
shard_passwd = passwd

#destination db ip port string
dst_srv = 127.0.0.1:17222
#destination db user
dst_user = mongo 
#destination db password
dst_passwd = passwd
#destination db authentification
dst_auth_db = admin
#whether destination db use MONGO_MCR , otherwise according to the db version
# dst_use_mcr = on 

# the name of source db to be used
#db = test
# the name of source collection to be used
#coll = collection
#colls = col1, col2, col3
# the name of destination db to be used
# dst_db = test2
# the name of destination collection to be used
# dst_coll = collection2 

#whether sync oplog
# oplog = off 
#whether just clone oplog
# raw_oplog = off 
#the destination namespace for raw oplog mode
# dst_op_ns = sync.oplog
#startt timestamp of oplog
# op_start = 1479800345,1
#end timestamp of oplog
# op_end = 1479800348,2

#whether cloning index
# no_index = off 

# a json format string to filter the data to be transfered
# filter = {"name":"jack"}

# background thread only for cloning data(not for oplog processing), default to 10
# bg_num = 16

# batch size criterion in data cloning(0-16M is valid), unit is Byte, default to 16M
# batch_size = 16777216
#
# log level, only support INFO, WARN, FATAL three levels
# log_level = INFO
